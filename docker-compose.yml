version: '3.5'

services:
  # Database container
  db: &db
    image: mysql:5.7
    environment:
      - MAX_CONNECTIONS=200
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3306"

  redis:
    image: redis:3.2.10-alpine

  # Base Rails Application, extended by other services
  rails: &rails
    build:
      context: ./
      dockerfile: ./dev.Dockerfile
    command: >
      sh -c "rm tmp/pids/server.pid 2>/dev/null;
      bin/rails server -b 0.0.0.0"
    volumes:
      - .:/usr/src/app
      - ./bundle:/bundle:cached
    environment: &rails-environment
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_HOST: db
      RAILS_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - db

  # docker-compose up --build web
  web: &web
    <<: *rails
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_HOST: db
      RAILS_ENV: development
      WEBPACKER_DEV_SERVER_HOST: webpack
    depends_on:
      - db
      - webpack
    tty: true
    stdin_open: true

  rails-test: &rails-test
    <<: *rails
    volumes:
      - .:/usr/src/app
      - test_bundle:/bundle:cached
      - modules:/usr/src/app/node_modules/
    environment:
      <<: *rails-environment
      RAILS_ENV: test

  #docker-compose run rspec
  rspec: &rspec
    <<: *rails-test
    entrypoint: ["./docker-entrypoint.sh", "rspec"]

  #docker-compose up guard
  guard: &guard
    <<: *rails-test
    entrypoint: ["./docker-entrypoint.sh", "bin/bundle", "exec", "guard", "--no-interactions"]
    tty: true

  # Asset Compiler for Rails
  webpack:
    <<: *rails
    command: bin/webpack-dev-server --inline true
    environment:
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
    ports:
      - '4035:4035'

volumes:
  db-data:
  dev_bundle:
  test_bundle:
